worker_processes  auto;
events {
    worker_connections  1024;
}

# RTMP configuration
rtmp {
    server {
        listen 1935; # Listen on standard RTMP port
        chunk_size 4000;
        
       # application live {
       #    live on;
       #    push rtmp://localhost:1935/show;
       # }

       application show {
           live on;
           # Turn on HLS
          # hls on;
          # hls_path /nginx/hls/;
          # hls_fragment 3;
          # hls_playlist_length 60;
          # disable consuming the stream from nginx as rtmp
          # deny play all;
       }
    }
}

http {
    sendfile off;
    tcp_nopush on;
    # aio on;
    directio 512;
    include             /usr/local/nginx/conf/mime.types;
    default_type application/octet-stream;
   
   server {
      listen       80 default_server;
      listen       [::]:80 default_server;
      server_name  ec2-18-118-122-227.us-east-2.compute.amazonaws.com www.ec2-18-118-122-227.us-east-2.compute.amazonaws.com;
  
      return 301 https://$server_name$request_uri;
   }		


    server {
        listen       443 ssl default_server;
        listen       [::]:443 ssl default_server;
        server_name  ec2-18-118-122-227.us-east-2.compute.amazonaws.com;
        root         /usr/share/nginx/html;

        client_max_body_size 100M;

        ssl_certificate "/etc/ssl/bundle.crt";
        ssl_certificate_key "/etc/ssl/server.key";
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;


        location / {
          proxy_pass http://localhost:3000;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }
        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    } 
   
}